---
title: "Class 8 : Breast Cancer"
format: pdf
---

## Outline
Today we will apply the machine learning methods we introduced in the last class on breast cancer biopsy data

The data is supplied on CSV format:


```{r}
wisc.df <- read.csv("WisconsinCancer.csv", row.names=1)
head(wisc.df)
```

Now I will store the diagnosis column for later and exclude it from the data set I will actually do things with that I will call 'wisc.data'

```{r}
diagnosis <- as.factor(wisc.df$diagnosis)
wisc.data <- wisc.df[,-1]
```

```{r}
diagnosis <-wisc.df[,1]
diagnosis
```


>Q1. How many observations are in this dataset?

```{r}
nrow(wisc.df)
```

>Q2. How many of the observations have a malignant diagnosis?

```{r}
table(wisc.df$diagnosis)
```

>Q3. How many variables/features in the data are suffixed with _mean?

```{r}
x <- colnames(wisc.df)
length( grep("_mean", x))
```

```{r}
x
```


#Principal Component Analysis

We need to scale to input data before PCA as some of the columns are measured in terms of very different units with different means and different variances. The upshot here is we set 'scale=TRUE' agrument to 'prcomp()'

```{r}
wisc.pr <- prcomp(wisc.data, scale=TRUE)
summary(wisc.pr)
```

>>Q4. From your results, what proportion of the original variance is captured by the first principal components (PC1)?

0.4427

>Q5. How many principal components (PCs) are required to describe at least 70% of the original variance in the data?

PC3

>Q6. How many principal components (PCs) are required to describe at least 90% of the original variance in the data?

PC7

```{r}
biplot(wisc.pr)
```

>Q7. What stands out to you about this plot? Is it easy or difficult to understand? Why?

This plot is messy and difficult to read.

```{r}
plot(wisc.pr$x[,1], wisc.pr$x[,2], col = as.factor(diagnosis) , 
     xlab = "PC1", ylab = "PC2")
```
>Q8. Generate a similar plot for principal components 1 and 3. What do you notice about these plots?

```{r}
# Repeat for components 1 and 3
plot(wisc.pr$x[,1], wisc.pr$x[,3], col = as.factor(diagnosis) , 
     xlab = "PC1", ylab = "PC3")
```

```{r}
# Create a data.frame for ggplot
df <- as.data.frame(wisc.pr$x)
df$diagnosis <- diagnosis

# Load the ggplot2 package
library(ggplot2)

# Make a scatter plot colored by diagnosis
ggplot(df) + 
  aes(PC1, PC2, col=diagnosis) + 
  geom_point()
```

```{r}
# Calculate variance of each component
pr.var <- wisc.pr$sdev^2
head(pr.var)
```

```{r}
# Variance explained by each principal component: pve
pve <- pr.var / sum(pr.var)

# Plot variance explained for each principal component
plot(pve, xlab = "Principal Component", 
     ylab = "Proportion of Variance Explained", 
     ylim = c(0, 1), type = "o")
```

```{r}
# Alternative scree plot of the same data, note data driven y-axis
barplot(pve, ylab = "Precent of Variance Explained",
     names.arg=paste0("PC",1:length(pve)), las=2, axes = FALSE)
axis(2, at=pve, labels=round(pve,2)*100 )
```

>Q9. For the first principal component, what is the component of the loading vector (i.e. wisc.pr$rotation[,1]) for the feature concave.points_mean?

```{r}
wisc.pr$rotation[,1]
```

>Q10. What is the minimum number of principal components required to explain 80% of the variance of the data?

# 3. Hierarchical clustering

```{r}
# Scale the wisc.data data using the "scale()" function
data.scaled <- scale(wisc.data)
```

```{r}
data.dist <- dist(data.scaled)
data.dist
```

```{r}
wisc.hclust <- hclust(data.dist, method="complete")
wisc.hclust

```

>Q11. Using the plot() and abline() functions, what is the height at which the clustering model has 4 clusters?

```{r}
plot(wisc.hclust)
abline(h=19, col="red", lty=2)
```

```{r}
wisc.hclust.clusters <- cutree(wisc.hclust, h=19)
wisc.hclust.clusters
```

```{r}
table(wisc.hclust.clusters, diagnosis)
```

>Q12. Can you find a better cluster vs diagnoses match by cutting into a different number of clusters between 2 and 10?

Yes, we can 

>Q13. Which method gives your favorite results for the same data.dist dataset? Explain your reasoning.

My favorite result is the "complete" method as it shows the similarities of clusters 


# 5. Combining methods

```{r}
wisc.pr.hclust <- hclust(dist(wisc.pr$x[,1:7]), method="ward.D2")
grps <- cutree(wisc.pr.hclust, k=2)
table(grps)
```

```{r}
table(grps, diagnosis)
```

```{r}
plot(wisc.pr$x[,1:2], col=grps)
```

```{r}
plot(wisc.pr$x[,1:2], col=as.factor(diagnosis))
```

>Q15. How well does the newly created model with four clusters separate out the two diagnoses?

```{r}
# Compare to actual diagnoses
wisc.pr.hclust.clusters <- cutree(wisc.pr.hclust, k=2)
table(wisc.pr.hclust.clusters, diagnosis)

```








